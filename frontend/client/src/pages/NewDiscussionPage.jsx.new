import React, { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import { useAuth } from "../components/AuthContext";
import { discussionService } from "../services/discussionService";
import MDEditor from '@uiw/react-md-editor';

export default function NewDiscussionPage() {
  const navigate = useNavigate();
  const { user } = useAuth();
  const [error, setError] = useState(null);
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState({
    title: "",
    content: "",
    type: "general"
  });

  const threadTypes = [
    { value: "general", label: "General Discussion" },
    { value: "problem", label: "Problem Discussion" },
    { value: "contest", label: "Contest Discussion" },
    { value: "group", label: "Group Discussion" }
  ];

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!user) {
      setError("You must be logged in to create a discussion.");
      return;
    }

    if (!formData.title.trim()) {
      setError("Title is required");
      return;
    }

    if (!formData.content.trim()) {
      setError("Content is required");
      return;
    }

    setError(null);
    setLoading(true);

    try {
      const thread = await discussionService.createThread({
        title: formData.title.trim(),
        content: formData.content.trim(),
        thread_type: formData.type
      });
      
      navigate('/discussions/' + thread.dissthread_id);
    } catch (err) {
      setError(err.message || "An error occurred. Please try again.");
    } finally {
      setLoading(false);
    }
  };

  if (!user) {
    return (
      <div className="max-w-4xl mx-auto px-4 py-8">
        <div className="text-center">
          <p className="text-gray-400 mb-4">
            Please sign in to create a discussion.
          </p>
          <Link 
            to="/login" 
            className="text-cyan-500 hover:text-cyan-400"
          >
            Go to Login
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto px-4 py-8">
      <div className="flex items-center gap-4 mb-6">
        <Link 
          to="/discussions" 
          className="text-cyan-500 hover:text-cyan-400"
        >
          ‚Üê Back to Discussions
        </Link>
      </div>

      <h1 className="text-2xl font-bold text-white mb-6">New Discussion</h1>

      <form onSubmit={handleSubmit} className="space-y-6">
        {error && (
          <div className="bg-red-900/50 border border-red-500 text-red-300 px-4 py-2 rounded">
            {error}
          </div>
        )}

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            Title
          </label>
          <input
            type="text"
            value={formData.title}
            onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}
            className="w-full bg-gray-700 text-white border border-gray-600 rounded px-3 py-2"
            placeholder="Enter discussion title"
            required
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            Type
          </label>
          <select
            value={formData.type}
            onChange={(e) => setFormData(prev => ({ ...prev, type: e.target.value }))}
            className="w-full bg-gray-700 text-white border border-gray-600 rounded px-3 py-2"
          >
            {threadTypes.map((t) => (
              <option key={t.value} value={t.value}>
                {t.label}
              </option>
            ))}
          </select>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            Content
          </label>
          <MDEditor
            value={formData.content}
            onChange={(value) => setFormData(prev => ({ ...prev, content: value || "" }))}
            className="min-h-[200px]"
            preview="edit"
            previewOptions={{
              className: "prose prose-invert max-w-none"
            }}
          />
        </div>

        <div className="pt-4 flex justify-between">
          <Link
            to="/discussions"
            className="px-6 py-2 bg-gray-700 text-white rounded-md hover:bg-gray-600"
          >
            Cancel
          </Link>
          <button
            type="submit"
            disabled={loading}
            className="px-6 py-2 bg-cyan-500 text-white rounded-md hover:bg-cyan-600 disabled:opacity-50"
          >
            {loading ? "Creating..." : "Create Discussion"}
          </button>
        </div>
      </form>
    </div>
  );
}
